# All relative paths must be written relative to $PROJECT_PATH
[PREPROCESSING]
#DATA_INPUT
    # Path to the input dataset
    data.input = Data/OG/Imagenes/
    # Path to the anotations of the input dataset
    # Anotations should show which are good and bad
    data.anots = Data/OG/anotations.csv
    # Image format
    data.format = tiff

#AUGMENTATION
    # Seed that the random selector will use to split train and test sets
    data.split.seed = 2021
    data.split.frac = 0.8
    # Available pipes and their codes can be found in
    # $PROJECT_PATH/Preprocessors/Augm_Pipelines Pipeline_Selector dict
    augm.pipeline = AUG_PIPE_V000
    # Times an OG train image will be augmented by the preprocessing pipeline
    augm.times = 25

#DATA_OUTPUT
    # output image size
    data.shape = 128,128,1
    # Augmented and splited data output paths
    data.out = Data/Processed/


[TRAIN]
#DATA
    data.train = Data/Processed/train_wo_augmentation
    data.test = Data/Processed/test
    data.shape = 128,128,1
    data.format = tiff


#MODEL
    # encoder and reverse decoder layers
    model.layers = 64,32,32,16,8,8
    model.latent_dim = 32
    # Path to save model
    model.save_path = Trained_Models/
    model.base_name = myFirstAE_woAUG

#OPTIMIZATION
    # Seed set during training setup
    train.seed = 2021
    # Number of epochs to train
    train.epochs = 200
    train.shuffle_buffer = 200
    train.batch_size = 128
    # Name of the optimizer NOTE: it is just to make an statement.
    #                             This cfg is not used internally
    train.optim_method = Adam
    # Learning rate
    train.lr = 0.001
    # Early stopping patience
    train.patience = 10

#EXEC PLACEMENT
    # Flag to use CUDA
    exec.cuda = 1
    # Number of GPU if data.cuda is set to 1
    exec.gpu = 0

#LOG OUTPUTS
    log.losses = ./Results/myFirstAE_woAUG/losses.csv


[INFERE]
    # Path to data
    data.train.out = Data/Processed/Test
    # Path to the saved model
    model.save_path = Trained_Models/AE_default_out.h5
    # Path to store results if None the results are only shown
    infere.out = Results/Inference_Outputs


[EXTRACT]
# DATA
    data.in = Data/Processed/NOK,Data/Processed/test,Data/Processed/train_wo_augmentation
    #data.in = Data/Processed/train_wo_augmentation
    data.shape = 128,128,1
    data.format = tiff
    data.rescale = True
    data.batch_size = 128

#MODEL
    # encoder and reverse decoder layers
    model.layers = 64,32,32,16,8,8
    model.latent_dim = 32
    # Path to save model
    model.save_path = Trained_Models/
    model.base_name = myFirstAE_woAUG
    model.segment_thresh = 150

    # What do you want to extract. Available options should be:
    #       - <which_extraction> : <code>
    #       - Latent spaces : EXTRACT_LSPACES
    #       - Raw output images : EXTRACT_RAW_OUT
    #       - Differences : EXTRACT_DIFFS
    #       - Segmentations : EXTRACT_SEGMENTS
    #       - Total error : EXTRACT_TOT_ERROR
    out.mode = EXTRACT_LSPACES,EXTRACT_RAW_OUT,EXTRACT_TOT_ERROR,EXTRACT_DIFFS,EXTRACT_SEGMENTS
    #out.mode = EXTRACT_SEGMENTS

    # Path in which the results will be stored the file format will depend
    # on the selected extraction mode. The name will be the model name followed
    # by anything is considered appropiated for the extraction mode.
    out.path = Results2/

